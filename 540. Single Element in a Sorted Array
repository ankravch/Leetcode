class Solution {
public:
    
    int singleNonDuplicate(vector<int>& nums) {
        int l = 0;
        int r = nums.size()-1;
        while(l<=r)
        {
            int m = l+(r-l)/2;
/*            if(m == l || m == r || (nums[m] != nums[m-1] && nums[m] != nums[m+1]))
                return nums[m];
            else if((nums[m] == nums[m-1]) && (m-l-1)%2 == 0)
                l = m+1;
            else if((nums[m] == nums[m-1]) && (m-l-1)%2 != 0)
                r = m-2;
            else if((nums[m] == nums[m+1]) && (m-l)%2 == 0)
                l = m+2;
            else if((nums[m] == nums[m+1]) && (m-l)%2 != 0)
                r = m-1; */
            if(nums[m] == nums[m^1])
                l=m+1;
            else
                r=m-1;
        }
        return nums[l];
    }
};
