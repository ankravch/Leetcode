class Solution {
public:
    static bool cmp(vector<int>&a, vector<int>&b)
    {
        if(a[0]<b[0])
            return true;
        else if(a[0] > b[0])
            return false;
        else
            return a[1]<b[1];
    }
    
    int minAreaRect(vector<vector<int>>& points) {
        sort(points.begin(), points.end(), cmp);
        int ret = INT_MAX;
        vector<vector<int>> ps;
        for(int i=0; i<points.size(); i++)
        {
            if(i == 0 || points[i][0]!=points[i-1][0])
            {
                vector<int> tmp;
                tmp.push_back(points[i][0]);
                ps.push_back(tmp);
            }
            ps.back().push_back(points[i][1]);
        }
        
        for(int i=0; i<ps.size()-1; i++)
        {
            for(int j=i+1; j<ps.size(); j++)
            {
                vector<int> &k1 = ps[i];
                vector<int> &k2 = ps[j];
                int prev = INT_MAX;
//                cout<<"i:"<<" "<<"j:"<<j<<endl;
                for(int _i=1, _j=1; _i<k1.size() && _j<k2.size();)
                {
                    if(k1[_i] == k2[_j])
                    {
                        if(prev!=INT_MAX)
                        {
                            ret = min(ret, (k2[0]-k1[0])*(k1[_i]-prev));
                        }
                        prev = k1[_i];
                        _i++;
                        _j++;
                    }
                    else if(k1[_i] > k2[_j])
                        _j++;
                    else
                        _i++;
                }
            }
        }
        if(ret ==INT_MAX)
            return 0;
        else
            return ret;
    }
};
