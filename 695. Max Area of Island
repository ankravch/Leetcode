class Solution {
public:
    void find_max_island(vector<vector<int>>& grid, vector<vector<int>> &visited, int x, int y, int row, int col, int &connected)
    {
        if(x<0 ||x>=row ||y<0 || y>=col)
            return;
        if(grid[x][y] == 0 || visited[x][y] == 1)
            return;
        visited[x][y] = 1;
        connected++;
        find_max_island(grid, visited, x-1, y, row, col, connected);
        find_max_island(grid, visited, x+1, y, row, col, connected);
        find_max_island(grid, visited, x, y-1, row, col, connected);
        find_max_island(grid, visited, x, y+1, row, col, connected);
    }

    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int row = grid.size();
        int col = grid[0].size();
        int connected = 0;
        int ret = 0;
        
        vector<vector<int>> visited(row, vector<int>(col, 0));
        for(int i=0; i<row; i++)
        {
            for(int j=0; j<col; j++)
            {
                if(grid[i][j] == 1 && visited[i][j] == 0 )
                    find_max_island(grid, visited, i, j, row, col, connected);
                ret = max(ret, connected);
                connected = 0;
            }
        }
        return ret;
    }
};
