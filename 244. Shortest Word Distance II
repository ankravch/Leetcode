class WordDistance {
public:
    map<string, vector<int>> help;
    
    WordDistance(vector<string> words) {
        for(int i=0; i<words.size(); i++)
        {
            if(help.find(words[i]) == help.end())
            {
                vector<int> tmp;
                help[words[i]] = tmp;
            }
            help[words[i]].push_back(i);
        }
    }
    
    int shortest(string word1, string word2) {
        vector<int> w1 = help[word1];
        vector<int> w2 = help[word2];
        
        int i=0, j=0;
        int ret = INT_MAX;
        for(;i<w1.size() && j<w2.size();)
        {
            if(w1[i]<=w2[j])
            {
                ret = min(ret, w2[j]-w1[i]);
                i++;
            }
            else
            {
                ret = min(ret, w1[i]-w2[j]);
                j++;
            }
        }
        return ret;
    }
};

/**
 * Your WordDistance object will be instantiated and called as such:
 * WordDistance obj = new WordDistance(words);
 * int param_1 = obj.shortest(word1,word2);
 */
