/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* constructMaximumBinaryTree(vector<int>& nums, int l, int r)
    {
        if(l>r)
            return NULL;
        int index = l;
        for(int i=l; i<=r; i++)
        {
            if(nums[i] > nums[index])
                index = i;
        }
        TreeNode *tmp = new TreeNode(nums[index]);
        tmp->left = constructMaximumBinaryTree(nums, l, index-1);
        tmp->right = constructMaximumBinaryTree(nums, index+1, r);
        return tmp;
    }
    
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        return constructMaximumBinaryTree(nums, 0, nums.size()-1);
    }
};
