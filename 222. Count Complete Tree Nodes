/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool exist(TreeNode* root, int h, int cur_h)
    {
        if(cur_h == h)
            return true;
        
        root = root->right;
        if(root)
            cur_h++;
        
        while(cur_h <h && root && root->left)
        {
            cur_h++;
            root = root->left;
        }
        
        return cur_h == h;
    }
    
    int countNodes(TreeNode* root) {
        if(!root)
            return 0;
        int h = 0;
        TreeNode* r = root;
        while(r)
        {
            h++;
            r = r->left;
        }
        int cur_h = 1;
        string ret = "";
        r = root;
        while(cur_h < h)
        {
            if(exist(root, h, cur_h))
            {
                ret += "1";
                root = root->right;
            }
            else
            {
                root = root->left;
                ret += "0";
            }
            cur_h++;
        }
        int res = pow(2, h-1);
        int tmp = 0;
        for(int i=0; i<ret.length(); i++)
        {
            tmp = tmp*2+(ret[i]-'0');
        }
        return res+tmp;
    }
};
